{"id":623962285,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1642687107,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/623962285/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"12.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(vector<string> &res, string ans, TreeNode *root)\n    {\n        if(!root->left && !root->right)\n        {\n            ans += to_string(root->val);\n            res.push_back(ans);\n            return;\n        }\n        \n        if(root->left)\n            helper(res, ans + to_string(root->val) + \"->\", root->left);\n        \n        if(root->right)\n            helper(res, ans + to_string(root->val) + \"->\", root->right);\n    }\n    \n    vector<string> binaryTreePaths(TreeNode* root) {\n        if(root == NULL)   \n            return {};\n        \n        vector<string> res;\n        helper(res, \"\", root);\n        \n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths"}
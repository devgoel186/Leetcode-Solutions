{"id":617785043,"lang":"cpp","time":"3Â months","timestamp":1641924926,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/617785043/","is_pending":"Not Pending","title":"Matrix Block Sum","memory":"9.6 MB","code":"class Solution {\npublic:\n    int sizeX, sizeY;\n    int extractSum(int i, int j, const vector<vector<int> >& sum) {\n        if (i < 0 || j < 0) return 0;\n        if (i >= sizeX) i = sizeX - 1;\n        if (j >= sizeY) j = sizeY - 1;\n        return sum[i][j];\n    }\n        \n    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int K) {\n        sizeX = mat.size();\n        sizeY = mat[0].size();\n        \n        vector<vector<int>> sum(sizeX, vector<int>(sizeY, 0));\n        // Calculate prefix matrix \n        for (int i = 0; i < sizeX; i++) {\n            for (int j = 0; j < sizeY; j++) {\n                sum[i][j] = mat[i][j] + extractSum(i-1, j, sum) + extractSum(i, j-1, sum) - extractSum(i-1, j-1, sum);\n            }\n        }\n        \n        // Use prefix matrix to calculate our sum\n        vector<vector<int>> ans(sizeX, vector<int>(sizeY, 0));\n        for (int i = 0; i < sizeX; i++) {\n            for (int j = 0; j < sizeY; j++) {\n                ans[i][j] = extractSum(i+K, j+K, sum) - extractSum(i+K, j-K-1,sum) - extractSum (i-K-1, j+K, sum) + extractSum(i-K-1, j-K-1, sum);\n            }\n        }\n        \n        return ans;\n    }\n};","compare_result":"111111111111","title_slug":"matrix-block-sum"}
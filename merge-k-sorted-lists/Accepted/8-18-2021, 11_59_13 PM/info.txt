{"id":540541461,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1629311353,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/540541461/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"13.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\n    struct compare\n    {\n        bool operator()(const ListNode *l, const ListNode *r)\n        {\n            return l->val > r->val;\n        }\n    };\n    \npublic:    \n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        \n        priority_queue<ListNode *, vector<ListNode *>, compare> pq;\n        \n        for(auto i : lists)\n        {\n            if(i != NULL)\n                pq.push(i);\n        }\n        \n        if(pq.empty())\n            return NULL;\n        \n        ListNode* x = pq.top();\n        pq.pop();\n        if(x->next != NULL)\n            pq.push(x->next);\n                \n        ListNode *tail = x;\n        while(!pq.empty())\n        {\n            tail->next = pq.top();\n            pq.pop();\n            tail = tail->next;\n            \n            if(tail->next != NULL)\n                pq.push(tail->next);\n        }\n        \n        return x;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}
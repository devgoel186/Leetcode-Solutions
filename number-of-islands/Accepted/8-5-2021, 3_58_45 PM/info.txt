{"id":533668497,"lang":"cpp","time":"8 months, 1 week","timestamp":1628159325,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/533668497/","is_pending":"Not Pending","title":"Number of Islands","memory":"18.5 MB","code":"class Solution {\npublic:\n    void check(vector<vector<char>> &grid, int row, int col, int n, int m)\n    {   \n        if((row < 0 || row >= n) || (col < 0 || col >= m) || (grid[row][col] != '1'))\n            return;\n        \n        vector<pair<int, int>> direction({{-1, 0}, {0, 1}, {1, 0}, {0, -1}});\n        \n        grid[row][col] = '*';\n        for(int i = 0; i < 4; i++)\n            check(grid, row + direction[i].first, col + direction[i].second, n, m);\n    }\n    \n    int numIslands(vector<vector<char>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int count = 0;\n        for(int i = 0; i < n; i++)\n        {\n            for(int j = 0; j < m; j++)\n            {\n                if(grid[i][j] == '1')\n                {                    \n                    check(grid, i, j, n, m);\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}
{"id":530795950,"lang":"cpp","time":"8Â months, 2Â weeks","timestamp":1627679147,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/530795950/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"64.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int rangeSumBST(TreeNode* root, int low, int high) {\n        if(root == NULL)\n            return 0;\n        \n        int sum = 0;\n        if(root->val < low)\n        {\n            sum = rangeSumBST(root->right, low, high);\n        }\n        else if(root->val > high)\n        {\n            sum = rangeSumBST(root->left, low, high);\n        }\n        else\n        {\n            sum = rangeSumBST(root->left, low, root->val - 1) + rangeSumBST(root->right, root->val + 1, high) + root->val;\n        }\n        \n        return sum;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst"}
{"id":645809270,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1645424650,"status_display":"Accepted","runtime":"73 ms","url":"/submissions/detail/645809270/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"73.1 MB","code":"class Solution {\n    private:\n    int helper(string &x, vector<vector<int>> &dp, int m, int n)\n    {\n        if(m > n)\n            return 0;\n        \n        if(m == n)\n            return 1;\n        \n        if(dp[m][n] != -1)\n            return dp[m][n];\n        \n        if(x[m - 1] == x[n - 1])\n            dp[m][n] = 2 + helper(x, dp, m + 1, n - 1);\n        else\n            dp[m][n] = max(helper(x, dp, m + 1, n), helper(x, dp, m, n - 1));\n        \n        return dp[m][n];\n    }\n    \n    public:\n    int longestPalindromeSubseq(string s) {\n        int n = s.length();\n        \n        vector<vector<int>> dp(n + 1, vector<int> (n + 1, -1));\n        \n        return helper(s, dp, 1, n);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence"}
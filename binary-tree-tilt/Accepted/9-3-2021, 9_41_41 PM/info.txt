{"id":548936441,"lang":"cpp","time":"7 months, 1 week","timestamp":1630685501,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/548936441/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"23.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode *root, int &sum)\n    {\n        if(root == NULL)\n            return 0;\n        \n        int l = helper(root->left, sum);\n        int r = helper(root->right, sum);\n        \n        sum += abs(l - r);\n        \n        return l + r + root->val;\n    }\n    \n    int findTilt(TreeNode* root) {\n        int sum = 0;\n        helper(root, sum);\n        \n        return sum;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt"}
{"id":540614871,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1629323068,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/540614871/","is_pending":"Not Pending","title":"Cherry Pickup II","memory":"38.5 MB","code":"class Solution {\npublic:\n    bool isSafe(vector<vector<int>>& grid, int r, int c1, int c2)\n    {\n        int n = grid.size(), m = grid[0].size();\n        if(r >= n || c1 < 0 || c1 >= m || c2 < 0 || c2 >= m)\n            return false;\n        return true;\n    }\n    \n    int dfs(vector<vector<int>> &grid, vector<vector<vector<int>>> &dp, int r, int c1, int c2)\n    {\n        int n = grid.size(), m = grid[0].size();\n        if(!isSafe(grid, r, c1, c2))\n            return INT_MIN;\n        \n        if(dp[r][c1][c2] != -1)\n            return dp[r][c1][c2];\n        \n        if(r == n - 1)\n        {\n            if(c1 == c2)\n                return grid[r][c1];\n            return grid[r][c1] + grid[r][c2];\n        }\n        \n        int cherries = 0;\n        if(c1 == c2)\n            cherries += grid[r][c1];\n        else\n            cherries += grid[r][c1] + grid[r][c2];\n        \n        int ans = 0;\n        \n        ans = max(cherries + dfs(grid, dp, r + 1, c1 - 1, c2 - 1), ans);\n        ans = max(cherries + dfs(grid, dp, r + 1, c1 - 1, c2), ans);\n        ans = max(cherries + dfs(grid, dp, r + 1, c1 - 1, c2 + 1), ans);\n        ans = max(cherries + dfs(grid, dp, r + 1, c1, c2 - 1), ans);\n        ans = max(cherries + dfs(grid, dp, r + 1, c1, c2), ans);\n        ans = max(cherries + dfs(grid, dp, r + 1, c1, c2 + 1), ans);\n        ans = max(cherries + dfs(grid, dp, r + 1, c1 + 1, c2 - 1), ans);\n        ans = max(cherries + dfs(grid, dp, r + 1, c1 + 1, c2), ans);\n        ans = max(cherries + dfs(grid, dp, r + 1, c1 + 1, c2 + 1), ans);\n        \n        return dp[r][c1][c2] = ans;\n    }\n    \n    int cherryPickup(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        vector<vector<vector<int>>> dp(75, vector<vector<int>> (n, vector<int> (75, -1)));\n        \n        return max(dfs(grid, dp, 0, 0, m - 1), 0);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"cherry-pickup-ii"}
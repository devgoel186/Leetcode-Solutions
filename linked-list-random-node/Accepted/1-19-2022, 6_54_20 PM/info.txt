{"id":623237408,"lang":"cpp","time":"2Â months, 3Â weeks","timestamp":1642598660,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/623237408/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"16.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *x;\n    Solution(ListNode* head) {\n       x = head;\n    }\n    \n    int getRandom() {\n        int len = 0;\n        ListNode *temp = x;\n        while(temp != NULL)\n        {\n            len++;\n            temp = temp->next;\n        }\n        \n        int n = rand() % len + 1;\n        temp = x;\n        \n        while(--n)\n            temp = temp->next;\n        \n        return temp->val;\n    }\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(head);\n * int param_1 = obj->getRandom();\n */","compare_result":"11111111","title_slug":"linked-list-random-node"}
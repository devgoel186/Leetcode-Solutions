{"id":540519887,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1629308557,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/540519887/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"12.7 MB","code":"class Solution {\npublic:\n    int subsetSum(vector<vector<int>> &dp, vector<int> &nums, int n, int sum)\n    {\n        if(n == 0)\n            return false;\n        \n        if(sum == 0)\n            return true;\n        \n        if(dp[n & 1][sum] != -1)\n            return dp[1 & n][sum];\n        \n        if(nums[n - 1] <= sum)\n            return dp[1 & n][sum] = subsetSum(dp, nums, n - 1, sum - nums[n - 1]) || subsetSum(dp, nums, n - 1, sum);\n        \n        else\n            return dp[1 & n][sum] = subsetSum(dp, nums, n - 1, sum);\n    }\n    \n    bool canPartition(vector<int>& nums) {\n        int sum = 0;\n        for(auto i : nums)\n            sum += i;\n        \n        if(sum % 2 != 0)\n            return false;\n        \n        vector<vector<int>> dp(2, vector<int> (sum + 1, -1));\n        \n        return subsetSum(dp, nums, nums.size(), sum / 2);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum"}
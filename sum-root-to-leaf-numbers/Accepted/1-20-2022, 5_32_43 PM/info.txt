{"id":623915803,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1642680163,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/623915803/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"9.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode *root, int sum, int &total)\n    {\n        if(!root->left && !root->right)\n        {\n            total += sum;\n            return;\n        }\n        \n        if(root->left)\n            helper(root->left, sum * 10 + root->left->val, total);\n        \n        if(root->right)\n            helper(root->right, sum * 10 + root->right->val, total);\n    }\n    \n    int sumNumbers(TreeNode* root) {\n        if(root == NULL)\n            return 0;\n        \n        int total = 0;\n        helper(root, root->val, total);\n        \n        return total;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers"}
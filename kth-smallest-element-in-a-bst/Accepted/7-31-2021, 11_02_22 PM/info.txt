{"id":531165229,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627752742,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/531165229/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorderArr(TreeNode *root, vector<int> &inorder)\n    {\n        if(root == NULL)\n            return;\n        inorderArr(root->left, inorder);\n        inorder.push_back(root->val);\n        inorderArr(root->right, inorder);\n    }\n    \n    int kthSmallest(TreeNode* root, int k) {\n        vector<int> inorder;\n        inorderArr(root, inorder);\n        return inorder[k - 1];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst"}
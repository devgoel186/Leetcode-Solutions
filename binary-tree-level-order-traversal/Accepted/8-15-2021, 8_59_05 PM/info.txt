{"id":538926365,"lang":"cpp","time":"8Â months","timestamp":1629041345,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/538926365/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        if(root == NULL)\n            return {};\n        \n        queue<TreeNode *> q;\n        vector<vector<int>> ans;\n        q.push(root);        \n        ans.push_back({root->val});\n        \n        while(!q.empty())\n        {       \n            int size = q.size();            \n            vector<int> res;\n            while(size--)\n            {        \n                TreeNode *x = q.front();\n                q.pop();\n                \n                if(x->left != NULL)\n                {\n                    q.push(x->left);\n                    res.push_back(x->left->val);\n                }\n                \n                if(x->right != NULL)\n                {\n                    q.push(x->right);\n                    res.push_back(x->right->val);\n                }   \n            }\n            \n            if(res.size() == 0)\n                continue;\n            ans.push_back(res);\n        }\n        \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}
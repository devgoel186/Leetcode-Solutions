{"id":551684499,"lang":"cpp","time":"7Â months","timestamp":1631132277,"status_display":"Accepted","runtime":"340 ms","url":"/submissions/detail/551684499/","is_pending":"Not Pending","title":"Even Odd Tree","memory":"150.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isEvenOddTree(TreeNode* root) {\n        if(root == NULL)\n            return true;\n        \n        queue<TreeNode *> q;\n        q.push(root);\n        \n        int level = 0;\n        bool flag = true;\n        \n        while(!q.empty())\n        {\n            int size = q.size();\n            int prev = flag ? -1 : 1e6;\n            \n            while(size--)\n            {\n                TreeNode *x = q.front();\n                q.pop();\n\n                if(flag)\n                {\n                    if((x->val > prev) && (x->val % 2 == 1))\n                        prev = x->val;\n                    else\n                        return false;\n                }\n                \n                else\n                {\n                    if((x->val < prev) && (x->val % 2 == 0))\n                        prev = x->val;\n                    else\n                        return false;\n                }\n                \n                if(x->left != NULL)\n                    q.push(x->left);\n                \n                if(x->right != NULL)\n                    q.push(x->right);\n            }\n            \n            level++;\n            flag = !flag;\n        }\n        \n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"even-odd-tree"}
{"id":536250830,"lang":"cpp","time":"8Â months","timestamp":1628594580,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/536250830/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"7.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        if(head == NULL)\n            return NULL;\n        \n        ListNode *slow = head;\n        ListNode *fast = head;\n        while(fast != NULL && fast->next != NULL)\n        {\n            slow = slow->next;\n            fast = fast->next->next;\n        }\n        \n        return slow;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list"}
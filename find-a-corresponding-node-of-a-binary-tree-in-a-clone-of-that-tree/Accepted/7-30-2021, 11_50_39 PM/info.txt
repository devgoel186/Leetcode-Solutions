{"id":530739675,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627669239,"status_display":"Accepted","runtime":"436 ms","url":"/submissions/detail/530739675/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"163.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* getTargetCopyHelper(TreeNode* cloned, int target) {\n        TreeNode *ans = NULL;\n        if(cloned == NULL)\n            return NULL;\n        \n        ans = getTargetCopyHelper(cloned->left, target);\n        if(ans != NULL)\n            return ans;\n        \n        if(cloned->val == target)\n            return cloned;\n        \n        ans = getTargetCopyHelper(cloned->right, target);\n        return ans;\n    }\n    \n    TreeNode* getTargetCopy(TreeNode* original, TreeNode* cloned, TreeNode* target) {\n        return getTargetCopyHelper(cloned, target->val);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree"}
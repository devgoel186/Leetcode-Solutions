{"id":538481080,"lang":"cpp","time":"8Â months","timestamp":1628965288,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/538481080/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"57 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        if(root == NULL)\n        {\n            root = new TreeNode(val);\n            return root;\n        }\n        \n        if(val > root->val)\n        {\n            root->right = insertIntoBST(root->right, val);\n        }\n        \n        else if(val < root->val)\n        {\n            root->left = insertIntoBST(root->left, val);\n        }\n        \n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}
{"id":633106607,"lang":"cpp","time":"2 months, 1 week","timestamp":1643824112,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/633106607/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"32.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* findNode(TreeNode *root)\n    {\n        TreeNode *temp = root;\n        while(temp->left != NULL)\n            temp = temp->left;\n        \n        return temp;\n    }\n    \n    TreeNode* deleteNode(TreeNode* root, int key) {\n        if(root == NULL)\n            return root;\n        \n        if(key == root->val)\n        {\n            if(!root->left && !root->right)\n                return NULL;\n\n            if(!root->right)\n            {\n                TreeNode *temp = root->left;\n                delete root;\n                return temp;\n            }\n\n            if(!root->left)\n            {\n                TreeNode *temp = root->right;\n                delete root;\n                return temp;\n            }\n\n            else\n            {\n                TreeNode *temp = findNode(root->right);\n                root->val = temp->val;\n                root->right = deleteNode(root->right, temp->val);\n                return root;\n            }\n        }\n        \n        else if(root->val > key)\n            root->left = deleteNode(root->left, key);\n        \n        else\n            root->right = deleteNode(root->right, key);\n        \n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-node-in-a-bst"}
{"id":551577153,"lang":"cpp","time":"7Â months","timestamp":1631118917,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/551577153/","is_pending":"Not Pending","title":"Buddy Strings","memory":"N/A","code":"class Solution {\npublic:\n    bool buddyStrings(string s, string goal) {\n        if(s.size() != goal.size())\n            return false;\n        \n        int n = s.size();\n        unordered_map<char, int> m;\n        char duplicate = '*';\n        for(int i = 0; i < n; i++)\n        {\n            m[s[i]]++;\n            if(m[s[i]] >= 2)\n                duplicate = s[i];\n        }\n        \n        if(s == goal && duplicate == '*')\n            return false;\n        \n        for(int i = 0; i < n; i++)\n        {\n            if(m.find(goal[i]) == m.end())\n                return false;\n            m[goal[i]]--;\n            if(m[goal[i]] < 0)\n                return false;\n        }\n        \n        return true;\n    }\n};","compare_result":"1111011111101111111110111011111111","title_slug":"buddy-strings"}
{"id":673497832,"lang":"cpp","time":"1Â week, 2Â days","timestamp":1649056561,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/673497832/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int length(ListNode *head)\n    {\n        int count = 0;\n        \n        ListNode *temp = head;\n        while(temp != NULL)\n        {\n            count++;\n            temp = temp->next;\n        }\n        \n        return count;\n    }\n    \n    ListNode* swapNodes(ListNode* head, int k) {\n        int len = length(head);\n        \n        ListNode *x = NULL;\n        ListNode *y = NULL;\n        ListNode *temp = head;\n        int count = 0;\n        \n        while(count != len - k + 1)\n        {\n            count++;\n            if(count == k)\n                x = temp;\n            if(count == len - k + 1)\n                y = temp;\n            \n            temp = temp->next;\n        }\n        \n        swap(x->val, y->val);\n        \n        return head;\n    }\n};","compare_result":"111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"swapping-nodes-in-a-linked-list"}
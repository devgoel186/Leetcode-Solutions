{"id":536912452,"lang":"cpp","time":"8Â months","timestamp":1628699822,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/536912452/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"10.5 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        if(nums.size() == 0)\n            return 0;\n        \n        int len = INT_MAX, j = 0, sum = 0;\n        \n        for(int i = 0; i < nums.size(); i++)\n        {\n            sum += nums[i];\n            \n            while(sum >= target)\n            {\n                len = min(len, i - j + 1);\n                sum -= nums[j];\n                j++;\n            }\n        }\n        \n        if(len == INT_MAX)\n            return 0;\n        return len;\n    }\n};","compare_result":"1111111111111111111","title_slug":"minimum-size-subarray-sum"}
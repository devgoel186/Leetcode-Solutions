{"id":536391656,"lang":"cpp","time":"8Â months","timestamp":1628615993,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/536391656/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if(root == NULL)      \n            return INT_MAX;\n        if(root->left == NULL && root->right == NULL)\n            return 1;        \n        \n        return min(minDepth(root->left), minDepth(root->right)) + 1;\n    }\n};","compare_result":"1101111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}
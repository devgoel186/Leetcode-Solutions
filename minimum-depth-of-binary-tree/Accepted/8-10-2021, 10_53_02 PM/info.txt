{"id":536393131,"lang":"cpp","time":"8Â months","timestamp":1628616182,"status_display":"Accepted","runtime":"228 ms","url":"/submissions/detail/536393131/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode *root)\n    {\n        if(root == NULL)      \n            return INT_MAX;\n        if(root->left == NULL && root->right == NULL)\n            return 1;        \n        \n        return min(helper(root->left), helper(root->right)) + 1;\n    }\n    \n    int minDepth(TreeNode* root) {\n        if(root == NULL)\n            return 0;\n        return helper(root);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}
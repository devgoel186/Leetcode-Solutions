{"id":645908865,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1645436998,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/645908865/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void traverse(TreeNode *root, unordered_map<int, int> &m)\n    {\n        if(root == NULL)\n            return;\n        \n        traverse(root->left, m);\n        m[root->val] = 1;\n        traverse(root->right, m);\n    }\n    \n    public:\n    bool findTarget(TreeNode* root, int k) {\n        unordered_map<int, int> m;\n        \n        traverse(root, m);\n        for(int i = 0; i <= k; i++)\n        {\n            if((m.find(i) != m.end()) && (m.find(k - i) != m.end()))\n                return true;\n        }\n        \n        return false;\n    }\n};","compare_result":"11111100010010100010100010101110111110111111101111111101101111111111001111101011111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111101111111111111111111","title_slug":"two-sum-iv-input-is-a-bst"}
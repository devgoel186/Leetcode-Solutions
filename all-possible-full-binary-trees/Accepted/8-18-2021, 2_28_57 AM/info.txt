{"id":540077419,"lang":"cpp","time":"7 months, 4 weeks","timestamp":1629233937,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/540077419/","is_pending":"Not Pending","title":"All Possible Full Binary Trees","memory":"35.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<TreeNode*> allPossibleFBT(int N) {\n        vector<TreeNode*> ans;\n        \n        if(N < 1 || N % 2 == 0) {\n            return ans;\n        }\n        \n        if(N == 1)\n        {\n            TreeNode *newRoot = new TreeNode(0);\n            return {newRoot};\n        }\n        \n        for(int k = 2; k < N; k += 2) {\n            vector<TreeNode*> v1 = allPossibleFBT(k - 1);\n            vector<TreeNode*> v2 = allPossibleFBT(N - k);\n            \n            for(auto i : v1) {\n                for(auto j : v2) {\n                    TreeNode* newRoot = new TreeNode(0);\n                    newRoot->left = i;\n                    newRoot->right = j;\n                    ans.push_back(newRoot);\n                }\n            }\n        }\n        \n        return ans;\n    }\n};","compare_result":"11111111111111111111","title_slug":"all-possible-full-binary-trees"}
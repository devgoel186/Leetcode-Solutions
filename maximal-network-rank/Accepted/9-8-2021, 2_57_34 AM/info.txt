{"id":551144405,"lang":"cpp","time":"7 months, 1 week","timestamp":1631050054,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/551144405/","is_pending":"Not Pending","title":"Maximal Network Rank","memory":"42.2 MB","code":"class Solution {\npublic:\n    int maximalNetworkRank(int n, vector<vector<int>>& roads) {\n        vector<unordered_set<int>> m(n);\n        // vector<int> indegree(n, 0);\n        for(auto i : roads)\n        {\n            m[i[0]].insert(i[1]);\n            m[i[1]].insert(i[0]);\n            // indegree[i[0]]++;\n            // indegree[i[1]]++;\n        }\n        \n        int maxRank = 0;\n        for(int i = 0; i < n; i++)\n        {\n            for(int j = i + 1; j < n; j++)\n            {\n                int sum = m[i].size() + m[j].size();\n                if(m[i].find(j) != m[i].end())\n                    sum--;\n                maxRank = max(maxRank, sum);\n            }\n        }\n        \n        return maxRank;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-network-rank"}
{"id":552263213,"lang":"cpp","time":"7Â months","timestamp":1631222630,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/552263213/","is_pending":"Not Pending","title":"Path with Maximum Gold","memory":"7.4 MB","code":"class Solution {\npublic:\n    bool isSafe(vector<vector<int>> &grid, int r, int c)\n    {\n        int m = grid.size(), n = grid[0].size();\n        if(r < 0 || c < 0 || r >= m || c >= n || grid[r][c] == 0)\n            return false;\n        return true;\n    }\n    \n    int helper(vector<vector<int>> &grid, int r, int c)\n    {\n        if(!isSafe(grid, r, c))\n            return 0;\n        \n        int sum = grid[r][c];\n        grid[r][c] = 0;\n        \n        int w = helper(grid, r, c - 1);\n        int x = helper(grid, r - 1, c);\n        int y = helper(grid, r, c + 1);\n        int z = helper(grid, r + 1, c);\n        \n        grid[r][c] = sum;\n        return sum + max({w, x, y, z});\n    }\n    \n    int getMaximumGold(vector<vector<int>>& grid) {\n        int res = 0;\n        \n        for(int i = 0; i < grid.size(); i++)\n            for(int j = 0; j < grid[0].size(); j++)\n                res = max(res, helper(grid, i, j));\n        \n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"path-with-maximum-gold"}
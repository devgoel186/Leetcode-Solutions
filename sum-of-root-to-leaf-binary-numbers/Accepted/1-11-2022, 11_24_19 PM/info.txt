{"id":617773035,"lang":"cpp","time":"3Â months","timestamp":1641923659,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/617773035/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"16.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n//     int util(TreeNode *root, int index, int local, int &sum)\n//     {\n//         if(root == NULL)\n//             return 0;\n        \n//         if(root->left == NULL && root->right == NULL)\n//             return util(root->left, index + 1) + util(root->right, index + 1) + root->data * pow(2, index);\n        \n//         int x = util(root->left, index + 1, (local + root->data * pow(2, index)), sum);\n//         int y = util(root->right, index + 1, (local + root->data * pow(2, index)), sum);\n        \n//         return x + y;\n//     }\n    \n    int util(TreeNode *root, int x)\n    {\n        if(root == NULL)\n            return 0;\n        \n        x = 2 * x + root->val;\n        \n        if(root->right == NULL && root->left == NULL)\n            return x;\n        \n        return util(root->left, x) + util(root->right, x);\n    }\n    \n    int sumRootToLeaf(TreeNode* root) {\n        return util(root, 0);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers"}
{"id":534732331,"lang":"cpp","time":"8 months, 1 week","timestamp":1628348797,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/534732331/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"22 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    pair<int, bool> helper(TreeNode *root)\n    {\n        if(root == NULL)\n            return {0, true};\n        \n        pair<int, bool> l = helper(root->left);\n        pair<int, bool> r = helper(root->right);\n        int h = max(l.first, r.first) + 1;\n        \n        bool output = l.second && r.second && (abs(r.first - l.first) <= 1);\n        return {h, output};\n    }\n    \n    bool isBalanced(TreeNode* root) {\n        return helper(root).second;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}
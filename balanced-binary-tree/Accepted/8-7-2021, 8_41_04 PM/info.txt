{"id":534735074,"lang":"cpp","time":"8 months, 1 week","timestamp":1628349064,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/534735074/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool helper(TreeNode *root, int &h)\n    {\n        if(root == NULL)\n            return true;\n        \n        int lh = 0, rh = 0;\n        bool l = helper(root->left, lh);\n        bool r = helper(root->right, rh);\n        h = max(lh, rh) + 1;\n        \n        return l && r && (abs(lh - rh) <= 1);\n    }\n    \n    bool isBalanced(TreeNode* root) {\n        int h = 0;\n        return helper(root, h);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}
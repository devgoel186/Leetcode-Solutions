{"id":676452591,"lang":"cpp","time":"4 days, 15 hours","timestamp":1649434948,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/676452591/","is_pending":"Not Pending","title":"Pyramid Transition Matrix","memory":"11.9 MB","code":"class Solution {\npublic:\n    unordered_set<string> fails;\n    \n    bool helper(string bottom, unordered_map<string, vector<char>> m, string layer, int start)\n    {\n        if(bottom.size() == 1)\n            return true;\n        \n        if(fails.find(bottom) != fails.end())\n            return false;\n        \n        if(start == bottom.size() - 1)\n            return helper(layer, m, \"\", 0);\n        \n        string base = bottom.substr(start, 2);\n        for(auto i : m[base])\n        {\n            if(helper(bottom, m, layer + i, start + 1))\n                return true;\n        }\n        \n        fails.insert(bottom);\n        return false;\n    }\n    \n    bool pyramidTransition(string bottom, vector<string>& allowed) {\n        unordered_map<string, vector<char>> m;\n        \n        for(auto i : allowed)\n        {\n            string base = i.substr(0, 2);\n            m[base].push_back(i[2]);\n        }\n        \n        return helper(bottom, m, \"\", 0);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"pyramid-transition-matrix"}
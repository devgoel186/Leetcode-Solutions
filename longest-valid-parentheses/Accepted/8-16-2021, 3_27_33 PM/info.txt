{"id":539318446,"lang":"cpp","time":"7 months, 4 weeks","timestamp":1629107853,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/539318446/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"7.2 MB","code":"class Solution {\npublic:\n    /* Sol 2 */\n    int longestValidParentheses(string s) {\n        stack<int> st;\n        st.push(-1);\n        \n        int i = 0, maxLen = 0;\n        while(i < s.length())\n        {\n            if(s[i] == '(')\n                st.push(i++);\n            else\n            {\n                st.pop();\n                if(st.empty())\n                    st.push(i++);\n                else\n                {\n                    maxLen = max(maxLen, i - st.top());\n                    i++;\n                }\n            }\n        }\n        \n        return maxLen;\n    }\n    \n    /* Sol 1 \n    \n    int longestValidParentheses(string s) {\n        int open = 0, close = 0, maxLen = 0;\n        for(int i = 0; i < s.length(); i++)\n        {\n            if(s[i] == '(')\n                open++;\n            else\n                close++;\n            \n            if(open == close)\n                maxLen = max(maxLen, open + close);\n            else if(close > open)\n                open = close = 0;\n        }\n        \n        open = close = 0;\n        for(int i = s.length() - 1; i >= 0; i--)\n        {\n            if(s[i] == '(')\n                open++;\n            else\n                close++;\n            \n            if(open == close)\n                maxLen = max(maxLen, open + close);\n            else if(open > close)\n                open = close = 0;\n        }\n        \n        return maxLen;\n    }\n    \n    */\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-valid-parentheses"}
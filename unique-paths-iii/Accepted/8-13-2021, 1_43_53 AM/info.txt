{"id":537546255,"lang":"cpp","time":"8Â months","timestamp":1628799233,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/537546255/","is_pending":"Not Pending","title":"Unique Paths III","memory":"20.7 MB","code":"class Solution {\npublic:\n    bool isSafe(const vector<vector<int>> &grid, int row, int col, int n, int m)\n    {\n        if(row < 0 || row >= n || col < 0 || col >= m || grid[row][col] < 0)\n            return false;\n        return true;\n    }\n    \n    void dfs(vector<vector<int>> &grid, int &count, int visited, int nonObstacles, int row, int col, int n, int m)\n    {\n        if(!isSafe(grid, row, col, n, m))\n            return;\n        \n        visited++;\n        \n        if(grid[row][col] == 2 && visited == nonObstacles)\n        {\n            count++;\n            return;\n        }\n        \n        if(grid[row][col] == 2)\n            return;\n        \n        grid[row][col] = -1;\n        \n        vector<pair<int, int>> dir({{0, -1}, {-1, 0}, {0, 1}, {1, 0}});\n        \n        for(int i = 0; i < 4; i++)\n            dfs(grid, count, visited, nonObstacles, row + dir[i].first, col + dir[i].second, n, m);\n        \n        grid[row][col] = 0;\n        visited--;\n    }\n    \n    int uniquePathsIII(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int nonObstacles = 0, res = 0;\n        \n        for(int i = 0; i < n; i++)\n        {\n            for(int j = 0; j < m; j++)\n            {\n                if(grid[i][j] != -1)\n                    nonObstacles++;\n            }\n        }\n        \n        for(int i = 0; i < n; i++)\n        {\n            for(int j = 0; j < m; j++)\n            {\n                if(grid[i][j] == 1)\n                    dfs(grid, res, 0, nonObstacles, i, j, n, m);\n            }\n        }\n        \n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"unique-paths-iii"}
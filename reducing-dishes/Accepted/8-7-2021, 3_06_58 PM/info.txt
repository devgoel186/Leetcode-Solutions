{"id":534621689,"lang":"cpp","time":"8 months, 1 week","timestamp":1628329018,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/534621689/","is_pending":"Not Pending","title":"Reducing Dishes","memory":"8.2 MB","code":"class Solution {\npublic:\n    int maxSatisfaction(vector<int>& satisfaction) {\n        int n = satisfaction.size();\n        sort(satisfaction.begin(), satisfaction.end());\n        vector<int> dp(n, 0);\n        \n        int sum = satisfaction[n - 1];\n        dp[n - 1] = sum;\n        int maxSum = sum;\n        \n        for(int i = n - 2; i >= 0; i--)\n        {            \n            dp[i] = satisfaction[i] + dp[i + 1] + sum;\n            maxSum = max(maxSum, dp[i]);\n            sum = sum + satisfaction[i];\n        }\n        \n        return max(maxSum, 0);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"reducing-dishes"}
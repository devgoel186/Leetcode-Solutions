{"id":557078733,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1631988427,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/557078733/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"27.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxSum = INT_MIN;\n    \n    int helper(TreeNode *root)\n    {\n        if(root == NULL)\n            return 0;\n        int a = max(helper(root->left), 0);\n        int b = max(helper(root->right), 0);\n        maxSum = max(maxSum, a + b + root->val);\n        return max(a, b) + root->val;\n    }\n    \n    int maxPathSum(TreeNode* root) {\n        if(root == NULL)\n            return 0;\n        helper(root);\n        return maxSum;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}
{"id":557076370,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1631988114,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/557076370/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode *root)\n    {\n        if(root == NULL)\n            return 0;\n        int a = helper(root->left);\n        int b = helper(root->right);\n        return max({a, b, a + b + root->val, 0});\n    }\n    \n    int maxPathSum(TreeNode* root) {\n        if(root == NULL)\n            return 0;\n        int x = helper(root->right); \n        int y = helper(root->left);\n\n        return max({x, y, x + y + root->val, 0});\n    }\n};","compare_result":"1111011100111101110000110011111111111111010000101111010001000000010001101100100100000000000000","title_slug":"binary-tree-maximum-path-sum"}
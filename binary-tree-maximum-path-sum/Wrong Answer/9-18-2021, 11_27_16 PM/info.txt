{"id":557074369,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1631987836,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/557074369/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode *root)\n    {\n        if(root == NULL)\n            return 0;\n        int a = maxPathSum(root->left);\n        int b = maxPathSum(root->right);\n        return max({a, b, a + b + root->val, 0});\n    }\n    \n    int maxPathSum(TreeNode* root) {\n        if(root == NULL)\n            return 0;\n        if(root->left == NULL && root->right == NULL)\n            return root->val;\n        int x = helper(root->right); \n        int y = helper(root->left);\n        return max({x, y, x + y + root->val, 0});\n    }\n};","compare_result":"1111111100111101010000010011100111010111010100101101010000000000010001001100000100000000000000","title_slug":"binary-tree-maximum-path-sum"}
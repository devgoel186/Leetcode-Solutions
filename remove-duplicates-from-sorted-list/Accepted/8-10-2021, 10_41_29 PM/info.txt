{"id":536387909,"lang":"cpp","time":"8Â months","timestamp":1628615489,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/536387909/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"11.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if(head == NULL)\n            return NULL;\n        \n        ListNode *temp = head;\n        while(temp->next != NULL)\n        {\n            if(temp->val == temp->next->val)\n            {\n                ListNode *tempNode = temp->next;\n                temp->next = tempNode->next;\n                tempNode->next = NULL;\n                delete tempNode;\n            }         \n            else\n            {\n                temp = temp->next;\n            }\n        }\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list"}
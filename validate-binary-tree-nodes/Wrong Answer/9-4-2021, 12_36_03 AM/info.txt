{"id":549008393,"lang":"cpp","time":"7 months, 1 week","timestamp":1630695963,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/549008393/","is_pending":"Not Pending","title":"Validate Binary Tree Nodes","memory":"N/A","code":"class Solution {\npublic:\n    bool dfs(int u, vector<int> &leftChild, vector<int> &rightChild, vector<bool> &visited)\n    {\n        if(visited[u])\n            return false;\n        \n        visited[u] = true;\n        \n        if(leftChild[u] != -1  && !dfs(leftChild[u], leftChild, rightChild, visited))\n            return false;\n        \n        if(rightChild[u] != -1 && !dfs(rightChild[u], leftChild, rightChild, visited))\n            return false;\n        \n        return true;\n    }\n    \n    bool validateBinaryTreeNodes(int n, vector<int>& leftChild, vector<int>& rightChild) {\n        vector<int> indegree(n, 0);\n        \n        for(auto i : leftChild)\n            if(i != -1)\n                indegree[i]++;\n        \n        for(auto i : rightChild)\n            if(i != -1)\n                indegree[i]++;\n        \n        int root = -1, rootCount = 0;\n        for(int i = 0; i < n; i++)\n        {\n            if(indegree[i] == 0)\n            {\n                root = i;\n                rootCount++;\n            }\n        }\n        \n        if(root == -1 || rootCount > 1)\n            return false;\n        \n        vector<bool> visited(n, 0);\n        \n        bool cond = dfs(root, leftChild, rightChild, visited);\n        \n        // for(auto i : visited)\n        //     if(!i)\n        //         return false;\n        \n        return cond;\n    }\n};","compare_result":"11111111011111111010111111111111111111111","title_slug":"validate-binary-tree-nodes"}
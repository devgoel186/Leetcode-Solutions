{"id":543920923,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1629886429,"status_display":"Accepted","runtime":"324 ms","url":"/submissions/detail/543920923/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.6 MB","code":"class Solution {\npublic:\n    int helper(vector<int> &nums, vector<int> &dp, int i)\n    {\n        if(dp[i] != -1)\n            return dp[i];\n        \n        dp[i] = 1;\n        for(int j = i - 1; j >= 0; j--)\n        {\n            if(nums[i] > nums[j])\n                dp[i] = max(dp[i], 1 + helper(nums, dp, j));\n        }\n        \n        return dp[i];\n    }\n    \n    int lengthOfLIS(vector<int>& nums) {\n        vector<int> dp(nums.size(), -1);\n        int maxVal = 0;\n        for(int i = 0; i < nums.size(); i++)\n            maxVal = max(helper(nums, dp, i), maxVal);\n        \n        return maxVal;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}
{"id":612212941,"lang":"cpp","time":"3 months, 1 week","timestamp":1641225388,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/612212941/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"30.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int countNodes(TreeNode* root) {\n        if(root == NULL)\n            return 0;\n        \n        int hl = 0, hr = 0;\n        TreeNode *ltemp = root, *rtemp = root;\n        \n        while(ltemp)\n        {\n            hl++;\n            ltemp = ltemp->left;\n        }\n        \n        while(rtemp)\n        {\n            hr++;\n            rtemp = rtemp->right;\n        }\n        \n        if(hl == hr)\n            return pow(2, hl) - 1;\n        \n        return 1 + countNodes(root->left) + countNodes(root->right);\n    }\n};","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes"}
{"id":541313107,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1629441045,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/541313107/","is_pending":"Not Pending","title":"Maximum Product of Splitted Binary Tree","memory":"90.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    \n    long long helper(TreeNode *root, long long sum, long long &mx)\n    {\n        if(root == NULL)\n            return 0;\n        \n        long long a = helper(root->left, sum, mx);\n        long long b = helper(root->right, sum, mx);\n        \n        long long lb = (a) * (sum - a);\n        long long rb = (b) * (sum - b);\n        \n        mx = max({lb, rb, mx});\n        \n        return (a + root->val + b);\n    }\n    \n    long long totalSum(TreeNode *root)\n    {\n        if(root == NULL)\n            return 0;\n        \n        return (totalSum(root->left) + totalSum(root->right) + root->val);\n    }\n    \n    int maxProduct(TreeNode* root) {\n        long long mx = 0;\n        long long sum = totalSum(root);\n        helper(root, sum, mx);\n        return mx % MOD;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-of-splitted-binary-tree"}
{"id":541310450,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1629440658,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/541310450/","is_pending":"Not Pending","title":"Maximum Product of Splitted Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode *root, int sum, int &mx)\n    {\n        if(root == NULL)\n            return 0;\n        \n        int a = helper(root->left, sum, mx);\n        int b = helper(root->right, sum, mx);\n        \n        int lb = a * (sum - a);\n        int rb = b * (sum - b);\n        \n        mx = max({lb, rb, mx});\n        \n        return a + root->val + b;\n    }\n    \n    int totalSum(TreeNode *root)\n    {\n        if(root == NULL)\n            return 0;\n        \n        return totalSum(root->left) + totalSum(root->right) + root->val;\n    }\n    \n    int maxProduct(TreeNode* root) {\n        int mx = INT_MIN;\n        int sum = totalSum(root);\n        helper(root, sum, mx);\n        return mx;\n    }\n};","compare_result":"111111111111111111111111111111110000000000000000000000","title_slug":"maximum-product-of-splitted-binary-tree"}
{"id":550344571,"lang":"cpp","time":"7 months, 1 week","timestamp":1630930016,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/550344571/","is_pending":"Not Pending","title":"Number of Ways to Arrive at Destination","memory":"N/A","code":"#define ll long long\n\nclass Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    \n    int dijkstra(int n, int src, vector<vector<pair<int, int>>> &adjl)\n    {   \n        vector<ll> dist(n, INT_MAX), count(n, 0);\n        dist[src] = 0;\n        count[src] = 1;\n        \n        priority_queue<pair<ll, int>, vector<pair<ll, int>>, greater<pair<ll, int>>> pq;\n        pq.push({0, src});\n        \n        while(!pq.empty())\n        {\n            pair<int, int> x = pq.top();\n            pq.pop();\n            int u = x.second;\n            \n            if(x.first > dist[u])\n                continue;\n            \n            for(auto i : adjl[u])\n            {\n                int v = i.first;\n                int w = i.second;                \n                \n                if(dist[v] > dist[u] + w)\n                {\n                    dist[v] = dist[u] + w;\n                    pq.push({dist[v], v});\n                    count[v] = count[u];\n                }\n                else if(dist[v] == dist[u] + w)\n                {\n                    count[v] = (count[v] + count[u]) % MOD;\n                }\n            }\n        }\n        \n        return count[n - 1];\n    }\n    \n    int countPaths(int n, vector<vector<int>>& roads) {\n        vector<vector<pair<int, int>>> adjl(n);\n        \n        for(auto i : roads)\n        {\n            adjl[i[0]].push_back({i[1], i[2]});\n            adjl[i[1]].push_back({i[0], i[2]});\n        }\n        \n        return dijkstra(n, 0, adjl);\n    }\n};","compare_result":"111111111111111111111111111111111111111111101111111110","title_slug":"number-of-ways-to-arrive-at-destination"}
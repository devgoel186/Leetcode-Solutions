{"id":666459606,"lang":"cpp","time":"2 weeks, 5 days","timestamp":1648135217,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/666459606/","is_pending":"Not Pending","title":"Game of Life","memory":"7 MB","code":"class Solution {\npublic:\n    int sum(vector<vector<int>> &board, int i, int j)\n    {\n        if(i < 0 || i >= board.size() || j < 0 || j >= board[0].size())\n            return 0;\n        return board[i][j];\n    }\n    \n    int helper(vector<vector<int>> &board, int i, int j)\n    {\n        int count = sum(board, i - 1, j - 1) + sum(board, i - 1, j) + sum(board, i - 1, j + 1) + sum(board, i, j - 1) +\n                           sum(board, i, j + 1) + sum(board, i + 1, j - 1) + sum(board, i + 1, j) + sum(board, i + 1, j + 1);\n        \n        cout << count << \" \";\n        \n        if(board[i][j] == 1)\n        {\n            if(count < 2)\n                return 0;\n            else if(count >= 2 && count <= 3)\n                return 1;\n            else if(count > 3)\n                return 0;\n        }\n        \n        else\n        {\n            if(count == 3)\n                return 1;\n        }\n        \n        return 0;\n    }\n    \n    void gameOfLife(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        \n        vector<vector<int>> newState(m, vector<int> (n, 0));\n        \n        for(int i = 0; i < m; i++)\n        {\n            for(int j = 0; j < n; j++)\n            {\n                newState[i][j] = helper(board, i, j);\n            }\n        }\n        \n        board = newState;\n    }\n};","compare_result":"1111111111111111111111","title_slug":"game-of-life"}
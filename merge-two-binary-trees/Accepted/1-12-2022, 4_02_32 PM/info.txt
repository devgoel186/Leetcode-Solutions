{"id":618270303,"lang":"cpp","time":"3Â months","timestamp":1641983552,"status_display":"Accepted","runtime":"67 ms","url":"/submissions/detail/618270303/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"33 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {        \n        if(root1 == NULL && root2 == NULL)\n           return NULL;\n        \n        if(root1 == NULL)\n            return root2;\n        \n        if(root2 == NULL)\n            return root1;\n        \n        TreeNode* x = new TreeNode();\n        x->val = root1->val + root2->val;\n        \n        x->left = mergeTrees(root1->left, root2->left);\n        x->right = mergeTrees(root1->right, root2->right);\n        \n        return x;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees"}
{"id":676495193,"lang":"cpp","time":"4 days, 13 hours","timestamp":1649439780,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/676495193/","is_pending":"Not Pending","title":"Design Linked List","memory":"N/A","code":"class Node {\npublic:\n    int val;\n    Node *next;\n    \n    Node(int data)\n    {\n        this->val = data;\n        this->next = NULL;\n    }\n};\n\nclass MyLinkedList {\npublic:    \n    Node *head;\n    \n    MyLinkedList() {\n        head = NULL;\n    }\n    \n    int get(int index) {\n        Node *temp = head;\n        \n        while(temp != NULL && index--)\n            temp = temp->next;\n        \n        if(temp == NULL)\n            return -1;\n        return temp->val;\n    }\n    \n    void addAtHead(int val) {\n        Node *newNode = new Node(val);\n        newNode->next = head;\n        head = newNode;\n    }\n    \n    void addAtTail(int val) {\n        Node *temp = head;\n        \n        while(temp != NULL && temp->next != NULL)\n            temp = temp->next;\n        \n        if(temp == NULL)\n            return;\n        \n        temp->next = new Node(val);\n    }\n    \n    void addAtIndex(int index, int val) {\n        Node *temp = head;\n        index--;\n        \n        while(temp != NULL && index > 0)\n            temp = temp->next;\n        \n        if(temp == NULL)\n            return;\n        \n        Node *newNode = new Node(val);\n        Node *tempNext = temp->next;\n        temp->next = newNode;\n        newNode->next = tempNext;\n    }\n    \n    void deleteAtIndex(int index) {\n        if(head == NULL)\n            return;\n        \n        if(index == 1)\n        {\n            head = head->next;\n            return;\n        }\n        \n        Node *prev = head;\n        Node *temp = head;\n        index--;\n        \n        while(temp != NULL && index--)\n        {\n            prev = temp;\n            temp = temp->next;\n        }\n        \n        if(temp == NULL)\n            return;\n        \n        Node *tempNext = temp->next;\n        prev->next = tempNext;\n        temp->next = NULL;\n        delete temp;\n    }\n};\n\n/**\n * Your MyLinkedList object will be instantiated and called as such:\n * MyLinkedList* obj = new MyLinkedList();\n * int param_1 = obj->get(index);\n * obj->addAtHead(val);\n * obj->addAtTail(val);\n * obj->addAtIndex(index,val);\n * obj->deleteAtIndex(index);\n */","compare_result":"1101010001011110110000000000000000000000000000000000000000000011","title_slug":"design-linked-list"}
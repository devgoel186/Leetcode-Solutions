{"id":536446543,"lang":"cpp","time":"8Â months","timestamp":1628623223,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/536446543/","is_pending":"Not Pending","title":"Number of Closed Islands","memory":"22.2 MB","code":"class Solution {\npublic:\n    void check(vector<vector<int>> &grid, int row, int col, int n, int m)\n    {   \n        if((row < 0 || row >= n) || (col < 0 || col >= m) || (grid[row][col] != 0))\n            return;\n        \n        vector<pair<int, int>> direction({{-1, 0}, {0, 1}, {1, 0}, {0, -1}});\n        \n        grid[row][col] = 2;\n        for(int i = 0; i < 4; i++)\n            check(grid, row + direction[i].first, col + direction[i].second, n, m);\n    }\n    \n    int closedIsland(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int count = 0;\n        \n        for(int i = 0; i < n; i++)\n        {\n            if(grid[i][0] == 0)\n                check(grid, i, 0, n, m);\n            if(grid[i][m - 1] == 0)\n                check(grid, i, m - 1, n, m);\n        }\n        \n        for(int i = 0; i < m; i++)\n        {\n            if(grid[0][i] == 0)\n                check(grid, 0, i, n, m);\n            if(grid[n - 1][i] == 0)\n                check(grid, n - 1, i, n, m);\n        }\n        \n        for(int i = 1; i < n - 1; i++)\n        {\n            for(int j = 1; j < m - 1; j++)\n            {\n                if(grid[i][j] == 0)\n                {                    \n                    check(grid, i, j, n, m);\n                    count++;\n                }\n            }\n        }\n        return count;    \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-closed-islands"}
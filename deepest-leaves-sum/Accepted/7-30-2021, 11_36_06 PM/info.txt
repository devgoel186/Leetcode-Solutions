{"id":530733863,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627668366,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/530733863/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"38.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    /* sum, height */\n    pair<int, int> deepestLeavesHelper(TreeNode *root)\n    {\n        if(root == NULL)\n            return {0, 0};\n        if(root->left == NULL && root->right == NULL)\n        {\n            return {root->val, 1};\n        }\n        \n        pair<int, int> l = deepestLeavesHelper(root->left);\n        pair<int, int> r = deepestLeavesHelper(root->right);\n        \n        int deepSum;\n        \n        if(l.second > r.second)\n            deepSum = l.first;\n        else if(l.second < r.second)\n            deepSum = r.first;\n        else\n            deepSum = l.first + r.first;\n        \n        return {deepSum, max(l.second, r.second) + 1};\n    }\n    \n    int deepestLeavesSum(TreeNode* root)\n    {\n        return deepestLeavesHelper(root).first;\n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}
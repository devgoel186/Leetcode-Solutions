{"id":530269923,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627584802,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/530269923/","is_pending":"Not Pending","title":"Rotate List","memory":"11.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {        \n        if(head == NULL)\n            return NULL;\n        ListNode *temp = head;\n        int length = 0;\n        while(temp->next != NULL)\n        {\n            length++;\n            temp = temp->next;\n        }\n        length++;\n        ListNode *tail = temp;\n        \n        temp = head;\n        ListNode *prev = NULL;\n        int count = 0;\n        k = k % length;\n        while(count != length - k - 1)\n        {\n            count++;\n            temp = temp->next;\n        }\n        \n        if(temp == NULL)\n            return head;\n        else\n        {\n            tail->next = head;\n            head = temp->next;\n            temp->next = NULL;\n        }\n        \n        return head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list"}
{"id":536257547,"lang":"cpp","time":"8Â months","timestamp":1628595912,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/536257547/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"21 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    /* height, diameter */\n    pair<int, int> helper(TreeNode *root)\n    {\n        if(root == NULL)\n            return {0, 0};\n        \n        pair<int, int> l = helper(root->left);\n        pair<int, int> r = helper(root->right);\n        \n        return {max(l.first, r.first) + 1, max({l.second, r.second, l.first + r.first})};\n    }\n    \n    int diameterOfBinaryTree(TreeNode* root) {\n        return helper(root).second;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}
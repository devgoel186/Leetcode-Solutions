{"id":551116519,"lang":"cpp","time":"7 months, 1 week","timestamp":1631045430,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/551116519/","is_pending":"Not Pending","title":"Triangle","memory":"N/A","code":"class Solution {\npublic:\n    /* O(N*N) - Time and Space\n    int minimumTotal(vector<vector<int>>& triangle) {\n        int n = triangle.size();\n        vector<vector<int>> dp(n, vector<int> (n, INT_MAX));\n        \n        dp[0][0] = triangle[0][0];\n        \n        for(int i = 1; i < n; i++)\n        {\n            for(int j = 0; j <= i; j++)\n            {\n                if(j == 0)\n                    dp[i][j] = dp[i - 1][j] + triangle[i][j];\n                else\n                    dp[i][j] = min(dp[i - 1][j - 1], dp[i - 1][j]) + triangle[i][j];\n            }\n        }\n        \n        int minVal = INT_MAX;\n        for(int i = 0; i < n; i++)\n        {\n            minVal = min(minVal, dp[n - 1][i]);\n        }\n        \n        return minVal;\n    }\n    */\n    \n    \n    /* O(N) - Space */\n    int minimumTotal(vector<vector<int>>& triangle) {\n        int n = triangle.size();\n        vector<int> dp(n, INT_MAX);\n        \n        dp[0] = triangle[0][0];\n        \n        for(int i = 1; i < n; i++)\n        {\n            for(int j = 0; j <= i; j++)\n            {\n                dp[i] = min(dp[i], dp[i - 1] + triangle[i][j]);\n            }\n        }\n        \n        // int minVal = INT_MAX;\n        // for(int i = 0; i < n; i++)\n        // {\n        //     minVal = min(minVal, dp[n - 1][i]);\n        // }\n        \n        return dp[n - 1];\n    }\n};","compare_result":"1111011000000001100001000010000010100000000","title_slug":"triangle"}
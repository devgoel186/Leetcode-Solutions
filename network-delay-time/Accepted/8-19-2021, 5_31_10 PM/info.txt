{"id":540910201,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1629374470,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/540910201/","is_pending":"Not Pending","title":"Network Delay Time","memory":"40 MB","code":"class Solution {\npublic:\n    int dijkstra(vector<vector<pair<int, int>>> &adjl, int src)\n    {\n        vector<int> dist(adjl.size(), 1e9);\n        dist[src] = 0;\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;\n        pq.push({0, src});        \n        \n        while(!pq.empty())\n        {\n            pair<int, int> x = pq.top();\n            pq.pop();\n            \n            int u = x.second;\n            \n            for(auto i : adjl[u])\n            {\n                int v = i.first;\n                int w = i.second;\n                \n                if(dist[v] > dist[u] + w)\n                {\n                    dist[v] = dist[u] + w;\n                    pq.push({dist[v], v});\n                }\n            }\n        }\n        \n        int maxVal = -1;\n        bool flag = false;\n        for(int i = 1; i < dist.size(); i++)\n        {\n            if(dist[i] == 1e9)\n            {\n                flag = true;\n                break;\n            }\n            maxVal = max(maxVal, dist[i]);\n        }\n        \n        if(flag)\n            return -1;\n        return maxVal;\n    }\n    \n    int networkDelayTime(vector<vector<int>>& times, int n, int k) {\n        vector<vector<pair<int, int>>> adjl(n + 1);\n        \n        for(int i = 0; i < times.size(); i++)\n        {       \n            int u = times[i][0];\n            int v = times[i][1];\n            int w = times[i][2];\n            adjl[u].push_back({v, w});\n        }\n        \n        return dijkstra(adjl, k);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"network-delay-time"}
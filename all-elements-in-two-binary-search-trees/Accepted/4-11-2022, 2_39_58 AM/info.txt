{"id":677883945,"lang":"cpp","time":"2 days, 10 hours","timestamp":1649624998,"status_display":"Accepted","runtime":"354 ms","url":"/submissions/detail/677883945/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"86.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void traverse(priority_queue<int, vector<int>, greater<int>> &pq, TreeNode *root)\n    {\n        if(root == NULL)\n            return;\n        \n        traverse(pq, root->left);\n        pq.push(root->val);\n        traverse(pq, root->right);\n    }\n    \n    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {\n        priority_queue<int, vector<int>, greater<int>> pq;\n        \n        traverse(pq, root1);\n        traverse(pq, root2);\n        \n        vector<int> ans;\n        while(!pq.empty())\n        {\n            ans.push_back(pq.top());\n            pq.pop();\n        }\n        \n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees"}
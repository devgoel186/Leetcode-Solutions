{"id":647654707,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1645647556,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/647654707/","is_pending":"Not Pending","title":"Partition to K Equal Sum Subsets","memory":"N/A","code":"class Solution {\n    private:\n    int x = 0;\n    \n    bool dfs(vector<int> &m, vector<bool> &visited, int i, int sum, int k)\n    { \n        if(k == 0)\n            return true;\n        \n        if(sum == 0)\n            return dfs(m, visited, 0, x / 4, k - 1);\n        \n        for(int j = i; j < m.size(); j++)\n        {\n            if(visited[j] || (sum - m[j] < 0))\n                continue;\n            \n            visited[j] = true;\n            \n            if(dfs(m, visited, j + 1, sum - m[j], k))\n                return true;\n            \n            visited[j] = false;\n        }\n        \n        return false;\n    }\n    \n    public:\n    bool canPartitionKSubsets(vector<int>& nums, int k) {\n        int n = nums.size();\n        for(auto i : nums)\n            x += i;\n    \n        if((n > k) || (x % k != 0))\n            return false;\n        \n        vector<bool> visited(n, false);\n        \n        return dfs(nums, visited, 0, x / 4, k);\n    }\n};","compare_result":"010001000000001111110000000000000000000000000000000000000000000000000000000000000000010001111111011111111101111111111110111111111111111111111110011000111111111","title_slug":"partition-to-k-equal-sum-subsets"}
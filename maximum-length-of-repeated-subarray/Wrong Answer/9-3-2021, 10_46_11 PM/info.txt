{"id":548962075,"lang":"cpp","time":"7 months, 1 week","timestamp":1630689371,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/548962075/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int findLength(vector<int>& nums1, vector<int>& nums2) {\n        int m = nums1.size(), n = nums2.size();\n        vector<vector<int>> dp(m, vector<int> (n, 0));\n        int ml = 0;\n        \n        for(int i = 0; i < n; i++)\n        {\n            for(int j = 0; j < n; j++)\n            {\n                if(i == 0 || j == 0)\n                    dp[i][j] = 1;\n                else if(nums1[i] == nums2[j])\n                {\n                    dp[i][j] = 1 + dp[i - 1][j - 1];\n                    ml = max(ml, dp[i][j]);\n                }\n                else\n                    dp[i][j] = 0;\n            }\n        }\n        \n        return ml;\n    }\n};","compare_result":"11110011111101111111111011011111011101111111101111100001","title_slug":"maximum-length-of-repeated-subarray"}
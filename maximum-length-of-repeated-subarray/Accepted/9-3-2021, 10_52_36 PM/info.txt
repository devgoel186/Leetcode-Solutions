{"id":548964817,"lang":"cpp","time":"7 months, 1 week","timestamp":1630689756,"status_display":"Accepted","runtime":"320 ms","url":"/submissions/detail/548964817/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"109.1 MB","code":"class Solution {\npublic:\n    int findLength(vector<int>& nums1, vector<int>& nums2) {\n        int m = nums1.size(), n = nums2.size();\n        vector<vector<int>> dp(m + 1, vector<int> (n + 1, 0));\n        int ml = 0;\n        \n        for(int i = 1; i <= m; i++)\n        {\n            for(int j = 1; j <= n; j++)\n            {   \n                if(nums1[i - 1] == nums2[j - 1])\n                {\n                    dp[i][j] = 1 + dp[i - 1][j - 1];\n                    ml = max(ml, dp[i][j]);\n                }\n                \n                else\n                    dp[i][j] = 0;\n            }\n        }\n        \n        return ml;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray"}
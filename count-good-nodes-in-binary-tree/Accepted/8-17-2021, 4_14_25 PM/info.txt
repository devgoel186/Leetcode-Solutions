{"id":539840553,"lang":"cpp","time":"7 months, 4 weeks","timestamp":1629197065,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/539840553/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"86.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode *root, int maxVal)\n    {\n        if(root == NULL)\n            return 0;\n        \n        int add = 0;\n        if(root->val >= maxVal)\n            add++;\n        \n        maxVal = max(maxVal, root->val);\n        \n        return helper(root->left, maxVal) + helper(root->right, maxVal) + add;\n    }\n    \n    int goodNodes(TreeNode* root) {\n        return helper(root, root->val);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree"}
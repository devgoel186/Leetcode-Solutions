{"id":552257191,"lang":"cpp","time":"7Â months","timestamp":1631221584,"status_display":"Accepted","runtime":"309 ms","url":"/submissions/detail/552257191/","is_pending":"Not Pending","title":"Possible Bipartition","memory":"72.1 MB","code":"class Solution {\npublic:\n    bool colorGraph(vector<vector<int>> &graph, vector<int> &color, int src, int col)\n    {\n        if(color[src] != -1)\n            return color[src] == col;\n        \n        color[src] = col;\n        \n        for(auto i : graph[src])\n        {   \n            if(!colorGraph(graph, color, i, col ^ 1))\n                return false;\n        }\n        \n        return true;\n    }\n    \n    bool possibleBipartition(int n, vector<vector<int>>& dislikes) {\n        vector<vector<int>> graph(n + 1);\n        for(auto i : dislikes)\n        {\n            graph[i[0]].push_back(i[1]);\n            graph[i[1]].push_back(i[0]);\n        }\n        \n        vector<int> color(n + 1, -1);\n        \n        for(int i = 1; i <= n; i++)\n        {\n            if(color[i] == -1 && !colorGraph(graph, color, i, 0))\n                return false;\n        }\n        \n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"possible-bipartition"}
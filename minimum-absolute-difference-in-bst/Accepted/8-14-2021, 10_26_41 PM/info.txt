{"id":538447613,"lang":"cpp","time":"8Â months","timestamp":1628960201,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/538447613/","is_pending":"Not Pending","title":"Minimum Absolute Difference in BST","memory":"25.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    pair<int, int> helper(TreeNode *root, int &diff)\n    {\n        if(root == NULL)\n            return {1e6, -1 * 1e6};\n        \n        /* diff, min, max */\n        pair<int, int> l = helper(root->left, diff);\n        pair<int, int> r = helper(root->right, diff);\n        \n        diff = min(diff, root->val - l.second);\n        diff = min(diff, r.first - root->val);\n        \n        return {min(root->val, l.first), max(root->val, r.second)};\n    }\n    \n    int getMinimumDifference(TreeNode* root) {\n        if(root == NULL)\n            return 0;\n        \n        int diff = 1e6;\n        helper(root, diff);        \n        return diff;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-absolute-difference-in-bst"}
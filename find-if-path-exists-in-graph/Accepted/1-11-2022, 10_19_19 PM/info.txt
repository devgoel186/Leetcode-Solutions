{"id":617735623,"lang":"cpp","time":"3Â months","timestamp":1641919759,"status_display":"Accepted","runtime":"588 ms","url":"/submissions/detail/617735623/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"164.8 MB","code":"class Solution {\npublic:\n    bool bfs(vector<vector<int>> &adjl, int a, int b, int n)\n    {\n        vector<bool> visited(n, false);\n        \n        queue<int> q;\n        q.push(a);\n        visited[a] = true;\n        \n        while(!q.empty())\n        {\n            int x = q.front();\n            q.pop();\n            \n            for(auto i : adjl[x])\n            {\n                if(i == b)\n                    return true;\n                \n                if(!visited[i])\n                {\n                    q.push(i);\n                    visited[i] = true;\n                }\n            }\n        }\n        \n        return false;\n    }\n    \n    bool validPath(int n, vector<vector<int>>& edges, int start, int end) {\n        if(n <= 1)\n            return true;\n        \n        vector<vector<int>> adjl(n);\n        \n        for(auto i : edges)\n        {\n            adjl[i[0]].push_back(i[1]);\n            adjl[i[1]].push_back(i[0]);\n        }\n        \n        return bfs(adjl, start, end, n);\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"find-if-path-exists-in-graph"}
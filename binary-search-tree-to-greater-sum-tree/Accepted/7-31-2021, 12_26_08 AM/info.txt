{"id":530753645,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627671368,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/530753645/","is_pending":"Not Pending","title":"Binary Search Tree to Greater Sum Tree","memory":"8.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void bstToGstHelper(TreeNode* root, int &sum) {\n        if(root == NULL)\n            return;\n        \n        bstToGstHelper(root->right, sum);\n        sum = sum + root->val;\n        root->val = sum;\n        bstToGstHelper(root->left, sum);\n    }\n    \n    TreeNode* bstToGst(TreeNode* root) {\n        int sum = 0;\n        bstToGstHelper(root, sum);\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"binary-search-tree-to-greater-sum-tree"}
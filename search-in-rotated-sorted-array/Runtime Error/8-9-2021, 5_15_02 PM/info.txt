{"id":535720654,"lang":"cpp","time":"8Â months","timestamp":1628509502,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/535720654/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    int findPivot(vector<int> &nums, int l, int r)\n    {\n        if(l == r)\n            return l; \n        int mid = (l + r) / 2;\n        if(nums[mid] > nums[mid + 1] && mid < r)\n            return mid;\n        if(nums[mid] < nums[mid - 1] && mid > l)\n            return mid - 1;\n        if(nums[l] >= nums[r])\n            return findPivot(nums, l, mid - 1);\n        return findPivot(nums, mid + 1, r);\n    }\n    \n    int helper(vector<int>& nums, int target, int l, int r)\n    {\n        if(l > r)\n            return -1;\n        int mid = (l + r) / 2;\n        if(nums[mid] == target)\n            return mid;\n        else if(nums[mid] > target)\n            return helper(nums, target, l, mid - 1);\n        return helper(nums, target, mid + 1, r);\n    }\n    \n    int search(vector<int>& nums, int target) {\n        int pivot = findPivot(nums, 0, nums.size() - 1);\n        int x = helper(nums, target, 0, pivot);\n        int y = helper(nums, target, pivot + 1, nums.size() - 1);\n        if(x == -1)\n            return y;\n        return x;\n    }\n};","compare_result":"111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-in-rotated-sorted-array"}
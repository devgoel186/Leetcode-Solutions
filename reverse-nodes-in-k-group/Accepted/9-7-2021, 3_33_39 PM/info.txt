{"id":550886388,"lang":"cpp","time":"7 months, 1 week","timestamp":1631009019,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/550886388/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"11.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverse(ListNode *head, ListNode *node)\n    {\n        if(head == NULL)\n            return NULL;\n        \n        ListNode *next = NULL, *curr = head, *prev = NULL;\n        \n        while(curr != node)\n        {\n            next = curr->next;\n            curr->next = prev;\n            prev = curr;\n            curr = next;            \n        }\n        \n        return prev;\n    }\n    \n    ListNode* reverseKGroup(ListNode* head, int k) {\n        if(head == NULL)\n            return NULL;\n        \n        ListNode *node = head;\n        for(int i = 0; i < k; i++)\n        {\n            if(node == NULL)\n                return head;\n            node = node->next;\n        }\n        \n        ListNode *x = reverse(head, node);\n        head->next = reverseKGroup(node, k);\n        \n        return x;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group"}
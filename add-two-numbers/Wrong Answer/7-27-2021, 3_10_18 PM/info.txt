{"id":529035916,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627378818,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/529035916/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        int carry = 0;\n        ListNode *temp = l1;\n        ListNode *temp2 = l2;\n        while(temp != NULL && temp2 != NULL)\n        {\n            if(carry == 1)\n                temp->val = temp->val + temp2->val + 1;\n            else\n                temp->val = temp->val + temp2->val;\n            \n            if(temp->val > 9)\n            {\n                temp->val %= 10;\n                carry = 1;\n            }\n            else\n                carry = 0;\n            temp = temp->next;\n            temp2 = temp2->next;\n            \n        }\n        while(temp != NULL)\n        {\n            if(carry == 1)\n                temp->val = temp->val + 1;\n            \n            if(temp->val > 9)\n            {\n                temp->val %= 10;\n                carry = 1;\n            }\n            else\n                carry = 0;\n            temp = temp->next;\n        }\n        while(temp2 != NULL)\n        {\n            if(carry == 1)\n            {\n                temp = new ListNode(temp2->val + 1);\n            }\n            else\n                temp = new ListNode(temp2->val);\n            \n            if(temp2->val > 9)\n            {\n                temp->val %= 10;\n                carry = 1;\n            }\n            else\n                carry = 0;\n            temp = temp->next;\n            temp2 = temp2->next;\n        }\n        if(carry == 1)\n            temp = new ListNode(1);\n        return l1;\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}
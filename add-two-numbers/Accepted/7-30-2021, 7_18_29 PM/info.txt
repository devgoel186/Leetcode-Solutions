{"id":530635545,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627652909,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/530635545/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"71.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        ListNode* list = NULL;         // Used to iterate through linked list\n        ListNode* res = NULL;          // Pointer to beginning of list \n        int carry = 0;                     // Carry over between nodes\n        \n        while (l1 != NULL && l2 != NULL) {\n            \n            if (list == NULL) {\n                list = new ListNode(carry);\n            }\n            \n            else {\n                list->next = new ListNode(carry);\n                list = list->next;\n            }\n            \n            if (res == NULL) {\n                res = list;\n            }\n            \n            carry = (list->val + (l1->val + l2->val)) / 10;\n            list->val = (list->val + (l1->val + l2->val)) % 10;\n            l1 = l1->next;\n            l2 = l2->next;\n        }\n        \n        while (l1 != NULL) {\n            list->next = new ListNode(carry);\n            list = list->next;\n            carry = (list->val + l1->val)/10;\n            list->val = (list->val + l1->val)%10;       \n            l1 = l1->next;\n        }\n        \n        while (l2 != NULL) {\n            list->next = new ListNode(carry);\n            list = list->next;\n            carry = (carry + l2->val)/10;\n            list->val = (list->val + l2->val)%10;       \n            l2 = l2->next;\n        }\n\n        while (carry != 0) {\n            list->next = new ListNode(carry%10);\n            list = list->next;\n            carry = carry/10;\n        }\n        \n        return res;\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}
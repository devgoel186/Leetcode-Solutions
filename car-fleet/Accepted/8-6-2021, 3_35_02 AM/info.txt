{"id":533932827,"lang":"cpp","time":"8 months, 1 week","timestamp":1628201102,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/533932827/","is_pending":"Not Pending","title":"Car Fleet","memory":"85.9 MB","code":"class Solution {\npublic:\n    // bool check(int a, int b, int s1, int s2, int target)\n    // {\n    //     int x = a;\n    //     int y = b;\n    //     while((x + s1 <= target) && (y + s2 <= target))\n    //     {\n    //         if((x + s1) == (y + s2))\n    //             return true;\n    //         x = x + s1;\n    //         y = y + s2;\n    //     }\n    //     return false;\n    // }\n    \n    int carFleet(int target, vector<int>& position, vector<int>& speed) {\n        int n = position.size();\n        vector<pair<int, double>> ps;\n        for(int i = 0; i < n; i++)\n        {\n            double time = (double)(target - position[i]) / speed[i];\n            ps.push_back({position[i], time});\n        }\n        \n        sort(ps.begin(), ps.end());\n        \n        int fleets = 1;\n        for(int i = n - 1; i >= 1; i--)\n        {\n            if(ps[i - 1].second <= ps[i].second)\n                ps[i - 1].second = ps[i].second;\n            else\n                fleets++;\n        }\n        \n        return fleets;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"car-fleet"}
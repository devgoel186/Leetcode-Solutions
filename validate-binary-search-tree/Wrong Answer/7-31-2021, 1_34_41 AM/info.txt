{"id":530777396,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627675481,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/530777396/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBSTHelper(TreeNode* root, int max, int min) {\n        if(root == NULL)\n            return true;\n        \n        if(root->left == NULL && root->right == NULL)\n            return true;\n        \n        bool l = isValidBSTHelper(root->left, root->val - 1, min);\n        bool r = isValidBSTHelper(root->right, max, root->val + 1);\n        bool cond = (l && r && root->val < max && root->val > min);\n        return cond;\n    }\n    \n    bool isValidBST(TreeNode* root) {\n        return isValidBSTHelper(root, INT_MAX, INT_MIN);\n    }\n};","compare_result":"11110001001101001101111111111011111111100110101101110110111011000000000000000000","title_slug":"validate-binary-search-tree"}
{"id":530781250,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627676195,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/530781250/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBSTHelper(TreeNode* root, long long max, long long min) {\n        if(root == NULL)\n            return true;\n        \n        bool cond = (root->val <= max) && (root->val >= min);\n        bool l = isValidBSTHelper(root->left, (long long)root->val - 1, min);\n        bool r = isValidBSTHelper(root->right, max, (long long)root->val + 1);\n        \n        return (cond && l && r);\n    }\n    \n    bool isValidBST(TreeNode* root) {\n        return isValidBSTHelper(root, LLONG_MAX, LLONG_MIN);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}
{"id":647651403,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1645647137,"status_display":"Accepted","runtime":"575 ms","url":"/submissions/detail/647651403/","is_pending":"Not Pending","title":"Matchsticks to Square","memory":"9.9 MB","code":"class Solution {\n    private:\n    bool dfs(vector<int> &m, vector<bool> &visited, int i, int sum, int k, int target)\n    { \n        if(k == 0)\n            return true;\n        \n        if(sum == target)\n            return dfs(m, visited, 0, 0, k - 1, target);\n        \n        for(int j = i; j < m.size(); j++)\n        {\n            if(visited[j] || (m[j] + sum > target))\n                continue;\n            \n            visited[j] = true;\n            if(dfs(m, visited, j + 1, sum + m[j], k, target))\n                return true;\n            visited[j] = false;\n        }\n        \n        return false;\n    }\n    \n    public:\n    bool makesquare(vector<int>& matchsticks) {\n        int sum = 0;\n        int n = matchsticks.size();\n        for(auto i : matchsticks)\n            sum += i;\n        \n        if((n < 4) || (sum % 4 != 0))\n            return false;\n        \n        vector<bool> visited(n, false);\n        \n        // for(auto i : visited)\n        // {\n        //     if(!visited[i])\n        //         if(!dfs(matchsticks, visited, i, sum / 4))\n        //             return false;\n        // }\n        \n        return dfs(matchsticks, visited, 0, 0, 3, sum / 4);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"matchsticks-to-square"}
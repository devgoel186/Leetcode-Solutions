{"id":646708270,"lang":"cpp","time":"1Â month, 2Â weeks","timestamp":1645530724,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/646708270/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"10.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        if(head == NULL)\n            return head;\n        \n        ListNode *odd = head;\n        ListNode *even = head->next;\n        ListNode *evenHead = even;\n        \n        while(odd != NULL && even != NULL)\n        {\n            ListNode *temp_odd = even->next;\n            \n            if(!temp_odd)\n                break;\n            \n            odd->next = temp_odd;\n            even->next = temp_odd->next;\n            \n            odd = odd->next;\n            even = even->next;\n        }\n        \n        odd->next = evenHead;\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list"}
{"id":612298572,"lang":"cpp","time":"3Â months, 1Â week","timestamp":1641234402,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/612298572/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {\n        if(root == NULL || (root->left == NULL && root->right == NULL))\n            return;\n        \n        if(root->right)\n            flatten(root->right);\n        \n        if(root->left)\n            flatten(root->left);\n        \n        if(root->left == NULL)\n            return;\n        \n        TreeNode *temp = root->left;\n        while(temp->right != NULL)\n            temp = temp->right;\n        \n        temp->right = root->right;\n        root->right = root->left;\n        root->left = NULL;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}
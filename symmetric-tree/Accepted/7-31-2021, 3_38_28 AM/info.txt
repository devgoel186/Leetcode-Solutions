{"id":530813489,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627682908,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/530813489/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSymmetricHelper(TreeNode* root, TreeNode *root2) {\n        if(root == NULL && root2 == NULL)\n            return true;\n        else if(root == NULL || root2 == NULL)\n            return false;\n            \n        \n        bool cond = isSymmetricHelper(root->left, root2->right) && isSymmetricHelper(root->right, root2->left) && (root->val == root2->val);\n        return cond;\n    }\n    \n    bool isSymmetric(TreeNode* root) {\n        if(root == NULL)\n            return true;\n        \n        return isSymmetricHelper(root->left, root->right);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}
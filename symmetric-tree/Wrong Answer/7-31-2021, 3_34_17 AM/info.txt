{"id":530812455,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627682657,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/530812455/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSymmetricHelper(TreeNode* root, TreeNode *root2) {\n        if(root == NULL && root2 == NULL)\n            return true;\n        else if(root == NULL || root2 == NULL)\n            return false;\n        \n        bool cond = isSymmetricHelper(root->left, root2->right) && isSymmetricHelper(root->right, root2->left);\n        return cond;\n    }\n    \n    bool isSymmetric(TreeNode* root) {\n        if(root == NULL)\n            return true;\n        \n        return isSymmetricHelper(root->left, root->right);\n    }\n};","compare_result":"11111110111111111011111111110011101110110111001100011011110010110111111101111111111011101111111011101111111101111011111011111111011111111111111011111011101101111111011111111111111111111111111111111","title_slug":"symmetric-tree"}
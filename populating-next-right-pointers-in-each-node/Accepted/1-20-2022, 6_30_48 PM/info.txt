{"id":623937415,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1642683648,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/623937415/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node","memory":"17.8 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* left;\n    Node* right;\n    Node* next;\n\n    Node() : val(0), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val, Node* _left, Node* _right, Node* _next)\n        : val(_val), left(_left), right(_right), next(_next) {}\n};\n*/\n\nclass Solution {\npublic:\n    Node* connect(Node* root) {\n        if(root == NULL)\n            return NULL;\n        \n        queue<Node *> q;\n        q.push(root);\n        \n        while(!q.empty())\n        {\n            int size = q.size();\n            vector<Node *> ans;\n            \n            while(size--)\n            {\n                Node *x = q.front();\n                q.pop();\n                ans.push_back(x);\n                \n                if(x->left)\n                    q.push(x->left);\n                if(x->right)\n                    q.push(x->right);\n            }\n            \n            int i;\n            for(i = 1; i < ans.size(); i++)\n                ans[i - 1]->next = ans[i];\n            \n            ans[i - 1]->next = NULL;\n        }\n        \n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node"}
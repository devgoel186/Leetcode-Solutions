{"id":528793811,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627337718,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/528793811/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* sortedArrayToBSTHelper(vector<int>& nums, int start, int end)\n    {\n        if(start > end)\n            return NULL;\n        \n        int mid = (start + end) / 2;\n        TreeNode *root = new TreeNode(nums[mid]);\n        \n        root->left = sortedArrayToBSTHelper(nums, start, mid - 1);\n        root->right = sortedArrayToBSTHelper(nums, mid + 1, end);\n        return root;\n    }\n    \n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        return sortedArrayToBSTHelper(nums, 0, nums.size() - 1);\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}
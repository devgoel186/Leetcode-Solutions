{"id":551701345,"lang":"cpp","time":"7Â months","timestamp":1631134784,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/551701345/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"12 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        map<int, vector<int>> m;\n        queue<pair<int, TreeNode *>> q;\n        q.push({0, root});\n        \n        while(!q.empty())\n        {\n            multiset<pair<int, int>> s;\n            int size = q.size();\n            while(size--)\n            {\n                auto x = q.front();\n                q.pop();\n                s.insert({x.first, x.second->val});\n                \n                if(x.second->left)\n                    q.push({x.first - 1, x.second->left});\n                if(x.second->right)\n                    q.push({x.first + 1, x.second->right});\n            }\n            \n            for(auto i : s)\n            {\n                m[i.first].push_back(i.second);\n            }\n        }\n        \n        vector<vector<int>> res;\n        \n        for(auto i : m)\n        {\n            res.push_back(i.second);\n        }\n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"vertical-order-traversal-of-a-binary-tree"}